apiVersion: v1
kind: Namespace
metadata:
  name: vscode-server
  labels:
    app.kubernetes.io/instance: vscode-server
    app.kubernetes.io/name: vscode-server
---
apiVersion: v1
kind: Service
metadata:
  name: vscode-server
  namespace: vscode-server
  labels:
    app.kubernetes.io/instance: vscode-server
    app.kubernetes.io/name: vscode-server
spec:
  type: ClusterIP
  ports:
    - appProtocol: http
      name: http
      port: 8000
      targetPort: http
  selector:
    app.kubernetes.io/instance: vscode-server
    app.kubernetes.io/name: vscode-server
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: vscode-server
  namespace: vscode-server
spec:
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app.kubernetes.io/instance: vscode-server
      app.kubernetes.io/name: vscode-server
  template:
    metadata:
      labels:
        app.kubernetes.io/instance: vscode-server
        app.kubernetes.io/name: vscode-server
    spec:
      serviceAccountName: vscode-server
#    initContainers:
#        - name: init-dind-daemon
#          image: busybox
#          securityContext:
#            privileged: true
#          command:
#            - /bin/sh
#            - '-c'
#            - 'rm -rf /var/run/*'
#          volumeMounts:
#            - mountPath: /var/run
#              name: docker-graph-run
      containers:
        - name: dind-daemon
          image: docker:dind
          imagePullPolicy: Always
          securityContext:
            privileged: true
          resources:
            limits:
              cpu: 4.0
              memory: 4G
            requests:
              cpu: 200m
              memory: 512Mi
          volumeMounts:
            - name: docker-graph-storage
              mountPath: /var/lib/docker
            - name: docker-graph-certs
              mountPath: /certs
            - name: docker-graph-run
              mountPath: /var/run
        - name: vscode-server
          image: ${VSCODE_SERVER_REGISTRY}/vscode-server
          imagePullPolicy: Always
          ports:
            - containerPort: 8000
              name: http
          volumeMounts:
            - mountPath: /usr/share/vscode-server
              name: vscode-server-data
            - mountPath: /home/vscode-server/sources
              name: vscode-server-sources
            - mountPath: /certs
              name: docker-graph-certs
            - mountPath: /var/run
              name: docker-graph-run
          env:
            - name: VSCODE_KEYRING_PASS
              value: ${VSCODE_KEYRING_PASS}
            - name: VSCODE_SERVER_DATA_DIR
              value: /usr/share/vscode-server
          resources:
            limits:
              cpu: 4.0
              memory: 8G
            requests:
              cpu: 500m
              memory: 512Mi
      volumes:
        - name: docker-graph-run
          emptyDir: {}
        - name: docker-graph-certs
          emptyDir: {}
        - name: docker-graph-storage
          emptyDir: {}
        - name: vscode-server-data
          emptyDir: {}
        - name: vscode-server-sources
          persistentVolumeClaim:
            claimName: vscode-server
---
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  namespace: vscode-server
  name: vscode-server
spec:
  accessModes:
    - ReadWriteOnce
  volumeMode: Filesystem
  resources:
    requests:
      storage: 10Gi
---
apiVersion: v1
kind: ServiceAccount
metadata:
  namespace: vscode-server
  name: vscode-server
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: vscode-server-ingress
  namespace: vscode-server
  annotations:
    nginx.ingress.kubernetes.io/use-regex: "true"
    nginx.ingress.kubernetes.io/rewrite-target: /$1
    nginx.ingress.kubernetes.io/backend-protocol: HTTP
    nginx.ingress.kubernetes.io/secure-backends: "false"
    nginx.ingress.kubernetes.io/auth-type: basic
    nginx.ingress.kubernetes.io/auth-secret: basic-auth
    nginx.ingress.kubernetes.io/auth-realm: "Authentication Required - vscode"
    cert-manager.io/cluster-issuer: letsencrypt-prod
spec:
  ingressClassName: public
  rules:
    - host: ${VSCODE_HOSTNAME}
      http:
        paths:
          - path: "/(.*)"
            pathType: ImplementationSpecific
            backend:
              service:
                name: vscode-server
                port:
                  number: 8000
