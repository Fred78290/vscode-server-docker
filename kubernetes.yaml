apiVersion: v1
kind: Namespace
metadata:
  name: vscode-server
  labels:
    app.kubernetes.io/instance: vscode-server
    app.kubernetes.io/name: vscode-server
---
apiVersion: v1
kind: Service
metadata:
  name: vscode-server
  namespace: vscode-server
  labels:
    app.kubernetes.io/instance: vscode-server
    app.kubernetes.io/name: vscode-server
spec:
  type: ClusterIP
  ports:
    - appProtocol: http
      name: http
      port: 8000
      targetPort: http
  selector:
    app.kubernetes.io/instance: vscode-server
    app.kubernetes.io/name: vscode-server
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: vscode-server
  namespace: vscode-server
spec:
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app.kubernetes.io/instance: vscode-server
      app.kubernetes.io/name: vscode-server
  template:
    metadata:
      labels:
        app.kubernetes.io/instance: vscode-server
        app.kubernetes.io/name: vscode-server
    spec:
      serviceAccountName: vscode-server
      containers:
        - name: vscode-server
          image: fred78290/vscode-server:v0.1.0
          imagePullPolicy: Always
          ports:
            - containerPort: 8000
              name: http
          volumeMounts:
            - mountPath: /usr/share/vscode-server
              name: vscode-server
          env:
            - name: VSCODE_KEYRING_PASS
              value: 3742BC84-6F7B-40D4-9AC7-6C79AF508126
          resources:
            limits:
              cpu: 4.0
              memory: 8G
            requests:
              cpu: 500m
              memory: 512mi
      volumes:
        - name: vscode-server
          persistentVolumeClaim:
            claimName: vscode-server
---
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  namespace: vscode-server
  name: vscode-server
spec:
  accessModes:
    - ReadWriteOnce
  volumeMode: Filesystem
  resources:
    requests:
      storage: 10Gi
---
apiVersion: v1
kind: ServiceAccount
metadata:
  namespace: vscode-server
  name: vscode-server
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: vscode-server-ingress
  namespace: vscode-server
  annotations:
    nginx.ingress.kubernetes.io/use-regex: 'true'
    nginx.ingress.kubernetes.io/rewrite-target: /$1
    nginx.ingress.kubernetes.io/backend-protocol: HTTP
    nginx.ingress.kubernetes.io/secure-backends: 'false'
    nginx.ingress.kubernetes.io/auth-type: basic
    nginx.ingress.kubernetes.io/auth-secret: basic-auth
    nginx.ingress.kubernetes.io/auth-realm: 'Authentication Required - vscode'
    cert-manager.io/cluster-issuer: letsencrypt-prod
spec:
  ingressClassName: public
  rules:
    - host: vscode-server.aldunelabs.com
      http:
        paths:
          - path: '/(.*)'
            pathType: ImplementationSpecific
            backend:
              service:
                name: vscode-server
                port:
                  number: 8000
