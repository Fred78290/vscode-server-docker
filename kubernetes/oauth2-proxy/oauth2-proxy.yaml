apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: vscode-server-ingress-oauth2
  namespace: ${VSCODE_NAMESPACE}
  annotations:
    nginx.ingress.kubernetes.io/backend-protocol: HTTP
    external-dns.alpha.kubernetes.io/hostname: ${ACCOUNT_HOSTNAME}
    external-dns.alpha.kubernetes.io/target: ${VSCODE_HOSTNAME}
    external-dns.alpha.kubernetes.io/ttl: "600"
    cert-manager.io/cluster-issuer: ${VSCODE_CERT_CLUSTER_ISSUER}
spec:
  ingressClassName: ${NGINX_INGRESS_CLASS}
  tls:
    - hosts:
        - ${VSCODE_HOSTNAME}
      secretName: vscode-server-ingress-tls
  rules:
    - host: ${VSCODE_HOSTNAME}
      http:
        paths:
          - path: /oauth2
            pathType: Prefix
            backend:
              service:
                name: oauth2-proxy
                port:
                  number: 4180
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/name: oauth2-proxy
  name: oauth2-proxy
  namespace: ${VSCODE_NAMESPACE}
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: oauth2-proxy
  template:
    metadata:
      labels:
        app.kubernetes.io/name: oauth2-proxy
    spec:
      containers:
        - args:
            - --provider=${VSCODE_OAUTH2_PROXY_PROVIDER}
            - --client-id=${VSCODE_OAUTH2_PROXY_CLIENT_ID}
            - --client-secret=${VSCODE_OAUTH2_PROXY_CLIENT_SECRET}
            - --cookie-secret=${VSCODE_OAUTH2_PROXY_COOKIE_SECRET}
            - --scope=${VSCODE_OAUTH2_PROXY_SCOPE}
            - --email-domain=*
            - --upstream=file:///dev/null
            - --http-address=0.0.0.0:4180
            - --redis-insecure-skip-tls-verify=true
            - --redis-ca-path=/usr/local/etc/redis/tls/ca.crt
            - --redis-password=${MASTER_REDIS_PASSWORD}
            - --session-store-type=redis
            - --redis-cluster-connection-urls=rediss://redis.redis.svc.cluster.local:6379
            - --redis-sentinel-master-name=redis-0
            - --redis-use-cluster=true
          resources:
            limits:
              cpu: 200m
              memory: 64Mi
            requests:
              cpu: 50m
              memory: 20Mi
          image: quay.io/oauth2-proxy/oauth2-proxy:latest
          imagePullPolicy: Always
          name: oauth2-proxy
          ports:
            - containerPort: 4180
              protocol: TCP
          volumeMounts:
            - name: redis-tls
              mountPath: /usr/local/etc/redis/tls
          envFrom:
            - configMapRef:
                name: redis-env
      volumes:
        - name: redis-tls
          secret:
            secretName: redis-tls
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/name: oauth2-proxy
  name: oauth2-proxy
  namespace: ${VSCODE_NAMESPACE}
spec:
  ports:
    - name: http
      port: 4180
      protocol: TCP
      targetPort: 4180
  selector:
    app.kubernetes.io/name: oauth2-proxy

