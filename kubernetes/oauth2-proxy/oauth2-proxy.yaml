apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: vscode-server-ingress-oauth2
  namespace: ${VSCODE_NAMESPACE}
  annotations:
    nginx.ingress.kubernetes.io/backend-protocol: HTTP
    external-dns.alpha.kubernetes.io/hostname: ${ACCOUNT_HOSTNAME}
    external-dns.alpha.kubernetes.io/target: ${VSCODE_HOSTNAME}
    external-dns.alpha.kubernetes.io/ttl: "600"
    cert-manager.io/cluster-issuer: ${VSCODE_CERT_CLUSTER_ISSUER}
spec:
  ingressClassName: ${NGINX_INGRESS_CLASS}
  tls:
    - hosts:
        - ${VSCODE_HOSTNAME}
      secretName: vscode-server-ingress-tls
  rules:
    - host: ${VSCODE_HOSTNAME}
      http:
        paths:
          - path: /oauth2
            pathType: Prefix
            backend:
              service:
                name: oauth2-proxy
                port:
                  number: 4180
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/name: oauth2-proxy
  name: oauth2-proxy
  namespace: ${VSCODE_NAMESPACE}
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: oauth2-proxy
  template:
    metadata:
      labels:
        app.kubernetes.io/name: oauth2-proxy
    spec:
      containers:
        - name: redis
          image: redis:6-alpine3.17
          ports:
            - containerPort: 6379
              name: redis
          volumeMounts:
            - name: pvc-oauth2-proxy
              mountPath: /data
          resources:
            limits:
              cpu: 500m
              memory: 640Mi
            requests:
              cpu: 100m
              memory: 200Mi
        - image: quay.io/oauth2-proxy/oauth2-proxy:latest
          imagePullPolicy: Always
          name: oauth2-proxy
          args:
            - --provider=$VSCODE_OAUTH2_PROXY_PROVIDER
            - --client-id=$VSCODE_OAUTH2_PROXY_CLIENT_ID
            - --client-secret=$VSCODE_OAUTH2_PROXY_CLIENT_SECRET
            - --cookie-secret=$VSCODE_OAUTH2_PROXY_COOKIE_SECRET
            - --scope=$VSCODE_OAUTH2_PROXY_SCOPE
            - --reverse-proxy=true
            - --email-domain=*
            - --upstream=file:///dev/null
            - --http-address=0.0.0.0:4180
            - --session-store-type=redis
            - --redis-connection-url=redis://127.0.0.1:6379
            - --pass-access-token=true
            - --pass-authorization-header=true
            - --set-xauthrequest=true
            - --set-authorization-header=true
          resources:
            limits:
              cpu: 200m
              memory: 64Mi
            requests:
              cpu: 50m
              memory: 20Mi
          ports:
            - containerPort: 4180
              protocol: TCP
      volumes:
        - name: pvc-oauth2-proxy
          persistentVolumeClaim:
            claimName: pvc-oauth2-proxy
---
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  namespace: ${VSCODE_NAMESPACE}
  name: pvc-oauth2-proxy
spec:
  accessModes:
    - ReadWriteOnce
  volumeMode: Filesystem
  storageClassName: ${STORAGE_CLASS}
  resources:
    requests:
      storage: 5Gi
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/name: oauth2-proxy
  name: oauth2-proxy
  namespace: ${VSCODE_NAMESPACE}
spec:
  ports:
    - name: http
      port: 4180
      protocol: TCP
      targetPort: 4180
  selector:
    app.kubernetes.io/name: oauth2-proxy
