apiVersion: v1
kind: Namespace
metadata:
  name: ${VSCODE_NAMESPACE}
  labels:
    app.kubernetes.io/name: vscode-server
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: vscode-server-ingress-helper
  namespace: ${VSCODE_NAMESPACE}
  annotations:
    nginx.ingress.kubernetes.io/backend-protocol: HTTP
    nginx.ingress.kubernetes.io/auth-url: "https://$host/oauth2/auth"
    nginx.ingress.kubernetes.io/auth-signin: "https://$host/oauth2/start?rd=$escaped_request_uri"
    nginx.ingress.kubernetes.io/auth-response-headers: "X-Auth-Request-User, X-Auth-Request-Email, X-Auth-Request-Access-Token"
    nginx.ingress.kubernetes.io/server-snippet: |
      location ~* "^/(stable|insiders|static|callback|web-extension-resource).*"  {
          rewrite "(?i)/(.*)" /$cookie_vscode_user/$1;
      }
    external-dns.alpha.kubernetes.io/hostname: ${ACCOUNT_HOSTNAME}
    external-dns.alpha.kubernetes.io/target: ${VSCODE_HOSTNAME}
    external-dns.alpha.kubernetes.io/ttl: "600"
    cert-manager.io/cluster-issuer: ${VSCODE_CERT_CLUSTER_ISSUER}
spec:
  ingressClassName: ${NGINX_INGRESS_CLASS}
  tls:
    - hosts:
        - ${VSCODE_HOSTNAME}
      secretName: vscode-server-ingress-tls
  rules:
    - host: ${VSCODE_HOSTNAME}
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: vscode-server-helper
                port:
                  number: ${VSCODE_HELPER_PORT}
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: vscode-server-ingress-noauth
  namespace: ${VSCODE_NAMESPACE}
  annotations:
    nginx.ingress.kubernetes.io/backend-protocol: HTTP
    external-dns.alpha.kubernetes.io/hostname: ${ACCOUNT_HOSTNAME}
    external-dns.alpha.kubernetes.io/target: ${VSCODE_HOSTNAME}
    external-dns.alpha.kubernetes.io/ttl: "600"
    cert-manager.io/cluster-issuer: ${VSCODE_CERT_CLUSTER_ISSUER}
spec:
  ingressClassName: ${NGINX_INGRESS_CLASS}
  tls:
    - hosts:
        - ${VSCODE_HOSTNAME}
      secretName: vscode-server-ingress-tls
  rules:
    - host: ${VSCODE_HOSTNAME}
      http:
        paths:
          - path: /robots.txt
            pathType: Exact
            backend:
              service:
                name: vscode-server-helper
                port:
                  number: ${VSCODE_HELPER_PORT}
          - path: /echo
            pathType: Exact
            backend:
              service:
                name: vscode-server-helper
                port:
                  number: ${VSCODE_HELPER_PORT}
          - path: /logout
            pathType: Exact
            backend:
              service:
                name: vscode-server-helper
                port:
                  number: ${VSCODE_HELPER_PORT}
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/name: vscode-server-helper
  name: vscode-server-helper
  namespace: ${VSCODE_NAMESPACE}
spec:
  ports:
    - protocol: TCP
      port: ${VSCODE_HELPER_PORT}
      targetPort: ${VSCODE_HELPER_PORT}
      name: vscode-server-helper
---
apiVersion: discovery.k8s.io/v1
kind: EndpointSlice
metadata:
  namespace: ${VSCODE_NAMESPACE}
  name: vscode-server-helper # by convention, use the name of the service as a prefix for the name of the EndpointSlice
  labels:
    # You should set the "kubernetes.io/service-name" label. Set its value to match the name of the service
    kubernetes.io/service-name: vscode-server-helper
addressType: IPv4
ports:
  - name: vscode-server-helper
    appProtocol: http
    protocol: TCP
    port: ${VSCODE_HELPER_PORT}
endpoints:
  - addresses:
      - "${EXTERNAL_IP}" # the IP addresses in this list can appear in any order
---
kind: Endpoints
apiVersion: v1
metadata:
  namespace: ${VSCODE_NAMESPACE}
  name: vscode-server-helper
subsets:
  - addresses:
      - ip: "${EXTERNAL_IP}"
    ports:
      - port: ${VSCODE_HELPER_PORT}
        name: vscode-server-helper
