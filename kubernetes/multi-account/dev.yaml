apiVersion: v1
kind: Namespace
metadata:
  name: ${VSCODE_NAMESPACE}
  labels:
    app.kubernetes.io/name: vscode-server
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: vscode-server-ingress-oauth2
  namespace: ${VSCODE_NAMESPACE}
  annotations:
    nginx.ingress.kubernetes.io/backend-protocol: HTTP
    nginx.ingress.kubernetes.io/secure-backends: "false"
    cert-manager.io/cluster-issuer: letsencrypt-prod
spec:
  ingressClassName: ${NGINX_INGRESS_CLASS}
  rules:
    - host: ${VSCODE_HOSTNAME}
      http:
        paths:
          - path: /oauth2
            pathType: Prefix
            backend:
              service:
                name: oauth2-proxy
                port:
                  number: 4180
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/name: vscode-server-helper
  name: vscode-server-helper
  namespace: ${VSCODE_NAMESPACE}
spec:
  ports:
    - name: http
      port: 4180
      protocol: TCP
      targetPort: 4180
  selector:
    app.kubernetes.io/name: vscode-server-helper
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/name: oauth2-proxy
  name: oauth2-proxy
  namespace: ${VSCODE_NAMESPACE}
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: oauth2-proxy
  template:
    metadata:
      labels:
        app.kubernetes.io/name: oauth2-proxy
    spec:
      containers:
        - args:
            - --provider=${VSCODE_OAUTH2_PROXY_PROVIDER}
            - --client-id=${VSCODE_OAUTH2_PROXY_CLIENT_ID}
            - --client-secret=${VSCODE_OAUTH2_PROXY_CLIENT_SECRET}
            - --cookie-secret=${VSCODE_OAUTH2_PROXY_COOKIE_SECRET}
            - --scope=${VSCODE_OAUTH2_PROXY_SCOPE}
            - --email-domain=*
            - --upstream=file:///dev/null
            - --http-address=0.0.0.0:4180
          resources:
            limits:
              cpu: 200m
              memory: 64Mi
            requests:
              cpu: 50m
              memory: 20Mi
          image: quay.io/oauth2-proxy/oauth2-proxy:latest
          imagePullPolicy: Always
          name: oauth2-proxy
          ports:
            - containerPort: 4180
              protocol: TCP
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/name: oauth2-proxy
  name: oauth2-proxy
  namespace: ${VSCODE_NAMESPACE}
spec:
  ports:
    - name: http
      port: 4180
      protocol: TCP
      targetPort: 4180
  selector:
    app.kubernetes.io/name: oauth2-proxy
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: vscode-server-ingress-helper
  namespace: ${VSCODE_NAMESPACE}
  annotations:
    nginx.ingress.kubernetes.io/backend-protocol: HTTP
    nginx.ingress.kubernetes.io/auth-url: "https://$host/oauth2/auth"
    nginx.ingress.kubernetes.io/auth-signin: "https://$host/oauth2/start?rd=$escaped_request_uri"
    nginx.ingress.kubernetes.io/server-snippet: |
      location ~ ^/(stable|insiders|static|callback|web-extension-resource) {
          proxy_set_header Host $host;

          proxy_set_header Upgrade $http_upgrade;
          proxy_set_header Connection "upgrade";
          proxy_set_header X-Real-IP $remote_addr;
          proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
          proxy_set_header X-Auth-Request-Redirect $scheme://$host:$LISTEN_PORT$request_uri;

          auth_request /oauth2/auth;
          error_page 401 = /oauth2/start?rd=https://$host:$LISTEN_PORT$request_uri;
 
          auth_request_set $user   $upstream_http_x_auth_request_user;
          auth_request_set $email  $upstream_http_x_auth_request_email;
          auth_request_set $token  $upstream_http_x_auth_request_access_token;
          proxy_set_header X-User  $user;
          proxy_set_header X-Email $email;
          proxy_set_header X-Access-Token $token;

          rewrite $uri $scheme://$host:$LISTEN_PORT/$user$uri;
      }
    nginx.ingress.kubernetes.io/configuration-snippet: |
      auth_request_set $user   $upstream_http_x_auth_request_user;
      auth_request_set $email  $upstream_http_x_auth_request_email;
      auth_request_set $token  $upstream_http_x_auth_request_access_token;
      proxy_set_header X-User  $user;
      proxy_set_header X-Email $email;
      proxy_set_header X-Access-Token $token;
spec:
  ingressClassName: ${NGINX_INGRESS_CLASS}
  rules:
    - host: ${VSCODE_HOSTNAME}
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: vscode-server-helper
                port:
                  number: 8000
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/name: vscode-server-helper
  name: vscode-server-helper
  namespace: ${VSCODE_NAMESPACE}
spec:
  type: ExternalName
  externalName: vscode-server-helper.aldunelabs.private
  ports:
    - port: 8000