apiVersion: v1
kind: Namespace
metadata:
  name: ${VSCODE_NAMESPACE}
  labels:
    app.kubernetes.io/name: vscode-server
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: vscode-server-helper
  labels:
    app.kubernetes.io/name: vscode-server
rules:
  - apiGroups:
      - ""
    resources:
      - pods
      - namespaces
      - services
      - replicationcontrollers
      - persistentvolumeclaims
      - persistentvolumes
      - events
      - endpoints
    verbs:
      - watch
      - list
      - get
      - update
      - create
      - delete
      - patch
  - apiGroups:
      - extensions
    resources:
      - replicasets
      - daemonsets
    verbs:
      - watch
      - list
      - get
      - update
      - create
      - delete
      - patch
  - apiGroups:
      - policy
    resources:
      - poddisruptionbudgets
    verbs:
      - get
      - watch
      - list
  - apiGroups:
      - apps
    resources:
      - statefulsets
      - replicasets
      - daemonsets
    verbs:
      - watch
      - list
      - get
      - update
      - create
      - delete
      - patch
  - apiGroups:
      - storage.k8s.io
    resources:
      - storageclasses
      - csinodes
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - batch
    resources:
      - jobs
      - cronjobs
    verbs:
      - watch
      - list
      - get
  - apiGroups:
      - coordination.k8s.io
    resources:
      - leases
    verbs:
      - get
      - update
      - create
  - apiGroups:
      - storage.k8s.io
    resources:
      - csistoragecapacities
      - csidrivers
    verbs:
      - list
      - get
      - update
      - watch
  - apiGroups:
      - apiextensions.k8s.io
    resources:
      - customresourcedefinitions
    verbs:
      - list
      - get
      - update
      - watch
      - delete
      - create
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: vscode-server-helper
  labels:
    app.kubernetes.io/name: vscode-server
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: vscode-server-helper
subjects:
  - kind: ServiceAccount
    name: vscode-server-helper
    namespace: ${VSCODE_NAMESPACE}
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/name: vscode-server-helper
  name: vscode-server-helper
  namespace: ${VSCODE_NAMESPACE}
spec:
  ports:
    - name: http
      port: ${VSCODE_HELPER_PORT}
      protocol: TCP
      targetPort: ${VSCODE_HELPER_PORT}
  selector:
    app.kubernetes.io/name: vscode-server-helper
---
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app.kubernetes.io/name: vscode-server
  name: vscode-server-helper
  namespace: ${VSCODE_NAMESPACE}
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: vscode-server-ingress-helper
  namespace: ${VSCODE_NAMESPACE}
  annotations:
    nginx.ingress.kubernetes.io/backend-protocol: HTTP
    nginx.ingress.kubernetes.io/auth-url: "https://$host/oauth2/auth"
    nginx.ingress.kubernetes.io/auth-signin: "https://$host/oauth2/start?rd=$escaped_request_uri"
    nginx.ingress.kubernetes.io/auth-response-headers: "X-Auth-Request-User, X-Auth-Request-Email, X-Auth-Request-Access-Token"
    nginx.ingress.kubernetes.io/server-snippet: |
      location ~* "^/(stable|insiders|static|callback|web-extension-resource).*"  {
          rewrite "(?i)/(.*)" /$cookie_vscode_user/$1;
      }
    external-dns.alpha.kubernetes.io/hostname: ${ACCOUNT_HOSTNAME}
    external-dns.alpha.kubernetes.io/target: ${VSCODE_HOSTNAME}
    external-dns.alpha.kubernetes.io/ttl: '600'
    cert-manager.io/cluster-issuer: ${VSCODE_CERT_CLUSTER_ISSUER}
spec:
  ingressClassName: ${NGINX_INGRESS_CLASS}
  tls:
    - hosts:
        - ${VSCODE_HOSTNAME}
      secretName: vscode-server-ingress-tls
  rules:
    - host: ${VSCODE_HOSTNAME}
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: vscode-server-helper
                port:
                  number: ${VSCODE_HELPER_PORT}
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: vscode-server-ingress-noauth
  namespace: ${VSCODE_NAMESPACE}
  annotations:
    nginx.ingress.kubernetes.io/backend-protocol: HTTP
    external-dns.alpha.kubernetes.io/hostname: ${ACCOUNT_HOSTNAME}
    external-dns.alpha.kubernetes.io/target: ${VSCODE_HOSTNAME}
    external-dns.alpha.kubernetes.io/ttl: "600"
    cert-manager.io/cluster-issuer: ${VSCODE_CERT_CLUSTER_ISSUER}
spec:
  ingressClassName: ${NGINX_INGRESS_CLASS}
  tls:
    - hosts:
        - ${VSCODE_HOSTNAME}
      secretName: vscode-server-ingress-tls
  rules:
    - host: ${VSCODE_HOSTNAME}
      http:
        paths:
          - path: /robots.txt
            pathType: Exact
            backend:
              service:
                name: vscode-server-helper
                port:
                  number: ${VSCODE_HELPER_PORT}
          - path: /echo
            pathType: Exact
            backend:
              service:
                name: vscode-server-helper
                port:
                  number: ${VSCODE_HELPER_PORT}
          - path: /logout
            pathType: Exact
            backend:
              service:
                name: vscode-server-helper
                port:
                  number: ${VSCODE_HELPER_PORT}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/name: vscode-server-helper
  name: vscode-server-helper
  namespace: ${VSCODE_NAMESPACE}
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: vscode-server-helper
  template:
    metadata:
      labels:
        app.kubernetes.io/name: vscode-server-helper
    spec:
      serviceAccountName: vscode-server-helper
      containers:
        - args:
            - --prefix=/create-space
            - --vscode-namespace=${VSCODE_NAMESPACE}
            - --vscode-template-file=/usr/share/vscode-server-helper/template.yaml
            - --http-address=0.0.0.0:${VSCODE_HELPER_PORT}
          resources:
            limits:
              cpu: 200m
              memory: 64Mi
            requests:
              cpu: 50m
              memory: 20Mi
          image: ${VSCODE_SERVER_HELPER_IMAGE}
          imagePullPolicy: Always
          name: vscode-server-helper
          ports:
            - containerPort: ${VSCODE_HELPER_PORT}
              protocol: TCP
          envFrom:
            - configMapRef:
                name: vscode-server-env
          volumeMounts:
            - mountPath: /usr/share/vscode-server-helper
              name: vscode-server-template
              readOnly: true
      volumes:
        - name: vscode-server-template
          configMap:
            name: vscode-server-template
